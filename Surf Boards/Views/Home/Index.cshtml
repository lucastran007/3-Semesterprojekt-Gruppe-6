@model IEnumerable<Surf_Boards.Models.SurfBoard>
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form asp-action="Index" method="get">
    <div class="form-group">
        <label for="SearchingString">Search by partial title:</label>
        <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" class="btn btn-primary" />
    </div>  
</form>
<a asp-action="Index"> Back to full list</a>


<table class="table">
    <thead>
        <tr>
             <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BoardSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.DisplayNameFor(model => model.BoardName)</a>
            </th>
         
             <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BoardTypeSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">BoardType</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]">@Html.DisplayNameFor(model => model.BoardName)</a>
            </th>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LengthSort"]">@Html.DisplayNameFor(model => model.Length)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["WidthSort"]">@Html.DisplayNameFor(model => model.Width)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ThicknessSort"]">@Html.DisplayNameFor(model => model.Thickness)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["VolumeSort"]">@Html.DisplayNameFor(model => model.Volume)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BoardTypeSort"]">@Html.DisplayNameFor(model => model.Boardtype)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSort"]">@Html.DisplayNameFor(model => model.Price)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equipment)
            </th>
            <th>
                Billede
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BoardName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Length)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Width)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Thickness)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Volume)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Boardtype)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Equipment)
                </td>
                <td>
                    <img src="@("~/Images/"+item.ImageName)" asp-append-version="true" width="25px" height="25px" />
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
