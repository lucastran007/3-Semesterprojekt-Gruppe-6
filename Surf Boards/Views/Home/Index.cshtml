@model PaginatedList<Surf_Boards.Models.SurfBoard>
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form asp-action="Index" method="get">
    <div class="form-group">
        <label for="SearchingString">Search by partial title:</label>
        <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" class="btn btn-primary" /> <a asp-action="Index"><button type="button" class="btn btn-primary">Reset</button></a>
    </div>  
</form>

<br/>

@if (TempData["SuccessMessage"] != null) {
	<div class="alert alert-success">
		<b>@TempData["SuccessMessage"]</b>
	</div>
}
@if (TempData["WarningMessage"] != null) {
	<div class="alert alert-danger">
		<b>@TempData["WarningMessage"]</b>
	</div>
}

<br/>

@if (@ViewBag.NotLoggedInNotice != null)
{
    <div class="alert alert-warning" role="alert">
        @ViewBag.NotLoggedInNotice
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Board Name</a>
            </th>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LengthSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Length</a>
            </th>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["WidthSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Width</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ThicknessSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Thickness</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["VolumeSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Volume</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BoardTypeSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Board Type</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Price</a>
            </th>
            <th>
               Equipment
            </th>
            <th>
               Image
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BoardName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Length)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Width)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Thickness)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Volume)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Boardtype)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Equipment)
                </td>
                <td>
                    <img src="@("~/Images/"+item.ImageName)" asp-append-version="true" width="25px" height="25px" />
                </td>
                <td>
                <a asp-controller="Rental" asp-action="Create" asp-route-id="@item.Id">
                    <input type="submit" value="Rent Board" class="btn btn-primary" />
                </a> 
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<span>
    @Model.PageIndex of @Model.TotalPages
</span>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

<hr />

@if (@ViewBag.NotLoggedInNotice == null)
{
    <div class="alert alert-success" role="alert">
        Thanks for signing up on our site! 😎
    </div>
}
